name: testing script

on:
  push:
    branches: [ master ]


jobs:
  #if: ${{ github.event.workflow_run.conclusion == 'success' }}

  job1:
    name: Job1
    runs-on: ubuntu-20.04
 #   env:
#      VARIABLE: CidrBlock
    steps:
 #   - name: checkout Another repo
 #     uses: actions/checkout@v2
 #     with:
  #      repository: 'rishithareddypasnoor007/AWS'
#        ref: master
        
    - name: get repo name
      run: |
          echo "REPOSITORY=$(echo $GITHUB_REPOSITORY | cut -d'/' -f2)" >> $GITHUB_ENV
          echo $GITHUB_REPOSITORY | cut -d'/' -f2 > reponame.value
    #      REPOSITORY=$(echo $GITHUB_REPOSITORY | cut -d'/' -f2)
    #      echo $REPOSITORY
               
    - name: print repo name
      run: |
        echo "env repo : ${{ env.REPOSITORY }}"
        echo "git commit sha from job 1=$GITHUB_SHA"
        
    - name: 'Upload Artifact'
      uses: actions/upload-artifact@v2
      with:
        name: my-artifact
        path: reponame.value
        retention-days: 1
  
  job2:
    runs-on: ubuntu-20.04
    needs: job1
#    env:
#      VARIABLE: CidrBlock
    steps:
    
    - name: 'Download Artifact'
      uses: actions/download-artifact@v2
      with:
        name: my-artifact
    
    - name: extracting REPO name from artifact
      run: |
        cat reponame.value
        echo "REPONAME=`cat reponame.value`" >> $GITHUB_ENV
    
    - name: Job2
      id: job2step
      run: |
          sleep 30
          echo "Job 2  JOB=$GITHUB_JOB"
          echo "Job 2  RUN_ID=$GITHUB_RUN_ID"
          echo "Job 2 RUN_NUMBER=$GITHUB_RUN_NUMBER"
          echo "Job 2  ACTION=$GITHUB_ACTION"
          echo ${{ steps.job2step.outcome }}
          echo "git commit sha from job 2=$GITHUB_SHA"
          echo "REPOSITORY2=${GITHUB_REPOSITORY#*/}" >> $GITHUB_ENV
          echo "Repo name: $REPOSITORY2"
          echo "Repository from job 1: $REPONAME"
          service=${REPONAME#*-}
          echo "service name=$service"

  #    - name: Set status check for deployment
  #      if: ${{ steps.job2step.outcome != 'success' }} 
  #      uses: ouzi-dev/commit-status-updater@v1.1.0
  #      with:
  #        status: "failure"
  #        url: "https://github.com/${{github.repository}}/actions/runs/${{github.run_id}}?check_suite_focus=true"
  #        description: " Service start failed"
  #        name: "Deployment"
  #        


